do
local getinfo = getinfo or debug.getinfo
local DEBUG = false
local Hooked = {}

local Detected, Kill

setthreadidentity(2)
--LPH_NO_VIRTUALIZE(function()
for i, v in getgc(true) do
    if typeof(v) == "table" then
        local DetectFunc = rawget(v, "Detected")
        local KillFunc = rawget(v, "Kill")
    
        if typeof(DetectFunc) == "function" and not Detected then
            Detected = DetectFunc
            
            local Old; Old = hookfunction(Detected, function(Action, Info, NoCrash)
                if Action ~= "_" then
                    if DEBUG then
                        warn(`Adonis AntiCheat flagged\nMethod: {Action}\nInfo: {Info}`)
                    end
                end
                
                return true
            end)

            table.insert(Hooked, Detected)
        end

        if rawget(v, "Variables") and rawget(v, "Process") and typeof(KillFunc) == "function" and not Kill then
            Kill = KillFunc
            local Old; Old = hookfunction(Kill, function(Info)
                if DEBUG then
                    warn(`Adonis AntiCheat tried to kill (fallback): {Info}`)
                end
            end)

            table.insert(Hooked, Kill)
        end
    end
end

local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...)
    local LevelOrFunc, Info = ...

    if Detected and LevelOrFunc == Detected then
        if DEBUG then
            warn(`Adonis Bypassed!`)
        end

        return coroutine.yield(coroutine.running())
    end
    
    return Old(...)
end))
--end)()
-- setthreadidentity(9)
setthreadidentity(7)
end

    --// Services
    local Debris = game:GetService('Debris')
    local EtherealParts = Instance.new('Folder', workspace)
    EtherealParts.Name  = 'EtherealParts'
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local Lighting = game:GetService("Lighting")
    local RunService = game:GetService("RunService")
    local TweenService = game:GetService("TweenService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local CC = Workspace.CurrentCamera
    --// Variables
    local LocalPlayer = Players.LocalPlayer
    local Camera = Workspace:FindFirstChildWhichIsA("Camera")
    local Hitsounds = {}

    --// Script Table
    local XrgeTables = {
        Functions = {},
        Folders = {},
        Parts = {},
        Locals = {
            Target = nil,
            IsTargetting = false,
            Resolver = {
                OldTick = os.clock(),
                OldPos = Vector3.new(0, 0, 0),
                ResolvedVelocity = Vector3.new(0, 0, 0)
            },
            AutoSelectTick = tick(),
            AntiAimViewer = {
                MouseRemoteFound = false,
                MouseRemote = nil,
                MouseRemoteArgs = nil,
                MouseRemotePositionIndex = nil
            },
            HitEffect = {
                ["Bubble"] = nil,
                ["Crescent Slash"] = nil,
                ["Crescent Slash"] = nil,
                ["Cum"] = nil,
                ["Explosion"] = nil,
                ["Slash"] = nil,
                ["Atomic Effects"] = nil,
            },
            Gun = {
                PreviousGun = nil,
                PreviousAmmo = 999,
                Shotguns = {"[Double-Barrel SG]", "[TacticalShotgun]", "[Shotgun]"}
            },
            PlayerHealth = {},
            JumpOffset = 0,
            BulletPath = {
                [4312377180] = Workspace:FindFirstChild("MAP") and Workspace.MAP:FindFirstChild("Ignored") or nil,
                [1008451066] = Workspace:FindFirstChild("Ignored") and Workspace.Ignored:FindFirstChild("Siren") and Workspace.Ignored.Siren:FindFirstChild("Radius") or nil,
                [3985694250] = Workspace and Workspace:FindFirstChild("Ignored") or nil,
                [5106782457] = Workspace and Workspace:FindFirstChild("Ignored") or nil,
                [4937639028] = Workspace and Workspace:FindFirstChild("Ignored") or nil,
                [1958807588] = Workspace and Workspace:FindFirstChild("Ignored") or nil
            },
            World = {
                FogColor = Lighting.FogColor,
                FogStart = Lighting.FogStart,
                FogEnd = Lighting.FogEnd,
                Ambient = Lighting.Ambient,
                Brightness = Lighting.Brightness,
                ClockTime = Lighting.ClockTime,
                ExposureCompensation = Lighting.ExposureCompensation
            },
            SavedCFrame = nil,
            NetworkPreviousTick = tick(),
            NetworkShouldSleep = false,
            FFlags = {
      }
            ,OriginalVelocity = {},
            RotationAngle = 0
        },
        Utility = {
            Drawings = {},
            EspCache = {}
        },
        Connections = {
            GunConnections = {}
        },
        AuraIgnoreFolder = Instance.new("Folder", game:GetService("Workspace"))
    }

    --// Xrge Table
    local XrgeLol = {
        Combat = {
            Enabled = false,
            Skibidi = false,
            AimPart = "HumanoidRootPart",
            Silent = false,
            BetaAirshot = false,
            TriggerBot = {
                Enabled = false,
                Delay = 0,
                TargeyOnly = false,
                FOV = {
                    Show = true,
                    Size = 80
                }
            },
            TargetInfo = false,
            Camera = false,
            EasingStyle = "Sine",
            EasingDirection = "Out",
            Alerts = true,
            LookAt = false,
            Spectate = false,
            PingBased = false,
            UseIndex = false,
            AntiAimViewer = false,
            AutoSelect = {
                Enabled = false,
                Cooldown = {
                    Enabled = false,
                    Amount = 0.5
                }
            },
            Checks = {
                Enabled = false,
                Knocked = false,
                Crew = false,
                Wall = false,
                Grabbed = false,
                Vehicle = false
            },
            Smoothing = {
                Horizontal = 1,
                Vertical = 1
            },
            Prediction = {
                Horizontal = 0.134,
                Vertical = 0.134
            },
            Resolver = {
                Enabled = false,
                Smoothness = 0.5
            },
            Fov = {
                Visualize = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1)
                },
                Radius = 80
            },
            Visuals = {
                Enabled = true,
                Tracer = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1),
                    Thickness = 2
                },
                Dot = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1),
                    Filled = true,
                    Size = 6
                },
                Chams = {
                    Enabled = false,
                    Fill = {
                        Color = Color3.fromRGB(255,209,220),
                        Transparency = 0.5
                    },
                    Outline = {
                        Color = Color3.new(255,255,255),
                        Transparency = 0
                    }
                }
            },
            Air = {
                Enabled = true,
                AirAimPart = {
                    Enabled = false,
                    HitPart = "LowerTorso"
                },
                JumpOffset = {
                    Enabled = false,
                    Offset = 0
                }
            }
        },
        Visuals = {
            Backtrack = {
                Enabled = true,
                Color = Color3.fromRGB(255,255,255),
                Method = "Folllow",
                Transparency = 0.5,
                Material = "Plastic",
            },
            BulletTracers = {
                Enabled = false,
                Color = {
                    Gradient1 = Color3.new(1, 1, 1),
                    Gradient2 = Color3.new(0, 0, 0)
                },
                Duration = 1,
                Fade = {
                    Enabled = false,
                    Duration = 0.5
                }
            },
            BulletImpacts = {
                Enabled = false,
                Color = Color3.new(1, 1, 1),
                Duration = 1,
                Size = 1,
                Material = "SmoothPlastic",
                Fade = {
                    Enabled = false,
                    Duration = 0.5
                }
            },
            OnHit = {
                Enabled = false,
                Effect = {
                    Enabled = false,
                    Color = Color3.new(1, 1, 1)
                },
                Sound = {
                    Enabled = false,
                    Volume = 5,
                    Value = "hentai4.wav"
                },
                Chams = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,209,220),
                    Material = "ForceField",
                    Duration = 1
                }
            },
            World = {
                Enabled = false,
                Fog = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,209,220),
                    End = 1000,
                    Start = 10000
                },
                Ambient = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,209,220)
                },
                Brightness = {
                    Enabled = false,
                    Value = 0
                },
                ClockTime = {
                    Enabled = false,
                    Value = 24
                },
                WorldExposure = {
                    Enabled = false,
                    Value = -0.1
                }
            },
            Crosshair = {
                Enabled = false,
                StickToTarget = false,
                Color = Color3.new(1, 1, 1),
                Size = 10,
                Gap = 2,
                Rotation = {
                    Enabled = false,
                    Speed = 1
                }
            }
        },
        AntiAim = {
            XHAHAHAHA = false,
            XHAHAHAHA2 = false,
            XHAHAHAHA3 = false,
            VelocitySpoofer = {
                Enabled = false,
                Visualize = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,209,220),
                    Prediction = 0.134
                },
                Type = "Underground",
                Roll = 0,
                Pitch = 0,
                Yaw = 0
            },
            CSync = {
                Enabled = false,
                Spoof = false,
                Type = "Target Strafe",
                Visualize = {
                    Enabled = false,
                    Color = Color3.fromRGB(255,209,220)
                },
                RandomDistance = 10,
                Custom = {
                    X = 0,
                    Y = 0,
                    Z = 0
                },
                TargetStrafe = {
                    Speed = 1,
                    Distance = 1,
                    Height = 1
                }
            },
            Network = {
                Enabled = false,
                WalkingCheck = false,
                Amount = 0.05
            },
            VelocityDesync = {
                Enabled = false,
                Range = 1
            },
            FFlagDesync = {
                Enabled = false,
                SetNew = false,
                FFlags = {"S2PhysicsSenderRate"}, 
                SetNewAmount = 1,
                Amount = 1
            },
        },
        Misc = {
            Movement = {
                Macro = {
                    Enabled = false,
                    Speed = 0.1,
                },
                Speed = {
                    Enabled = false,
                    Amount = 1
                },
            },
            Exploits = {
                Enabled = false,
                NoRecoil = false,
                NoJumpCooldown = false,
                NoSlowDown = false
            }
        }
    }

local HitEffectsHAHAHHA = "Cum"
local crosshair = loadstring(game:HttpGet("https://pastebin.com/raw/KzkwXZZT"))()
local NEINIGGANEINEI
local WOAHHH
do
local TriggerBotTarget
local TriggerBotFovCircle = Drawing.new("Circle")
TriggerBotFovCircle.Color = Color3.fromRGB(0,245,0)
TriggerBotFovCircle.Visible = XrgeLol.Combat.TriggerBot.FOV.Show and XrgeLol.Combat.TriggerBot.Enabled
TriggerBotFovCircle.Filled = false
TriggerBotFovCircle.Radius = XrgeLol.Combat.TriggerBot.FOV.Size*3
TriggerBotFovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)

function UpdateFOVCuh()
TriggerBotFovCircle.Color = Color3.fromRGB(100,0,0)
TriggerBotFovCircle.Visible = XrgeLol.Combat.TriggerBot.FOV.Show and XrgeLol.Combat.TriggerBot.Enabled
TriggerBotFovCircle.Filled = false
TriggerBotFovCircle.Radius = XrgeLol.Combat.TriggerBot.FOV.Size*3
TriggerBotFovCircle.Position = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)
end
local IgnoreList = {LocalPlayer.Character, Camera}
local function PartTrigguhVisible(Part)
    if Part and Part.Head then
        local Hit = workspace:FindPartOnRayWithIgnoreList(
            Ray.new(Camera.CFrame.Position, Part.Head.Position - Camera.CFrame.Position), IgnoreList)
        if Hit and Hit:IsDescendantOf(Part) then
            return true
        end
        return false
    else
        return true
    end
end
local function LocateTheseNiggas()
    local players = game:GetService("Players")
    local localPlayer = players.LocalPlayer
    local closestPlayer
    local closestDistance = math.huge
    for _, player in ipairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if not XrgeLol.Combat.TriggerBot.TargetOnly or player == XrgeTables.Locals.Target and XrgeTables.Locals.IsTargetting then
            local part = player.Character.HumanoidRootPart
            local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
            if onScreen then
                local distanceToCenter = (TriggerBotFovCircle.Position - Vector2.new(screenPos.X, screenPos.Y)).Magnitude

                if PartTrigguhVisible(player.Character) and distanceToCenter < closestDistance and distanceToCenter <= TriggerBotFovCircle.Radius then
                    closestPlayer = player
                    closestDistance = distanceToCenter
                end
            end
        end
        end
    end
    return closestPlayer
end

game:GetService("RunService").RenderStepped:Connect(function()
    TriggerBotTarget = LocateTheseNiggas()
    UpdateFOVCuh()
    if XrgeLol.Combat.TriggerBot.Enabled then
    if TriggerBotTarget and LocalPlayer.Character:FindFirstChildWhichIsA("Tool") ~= nil then
    task.wait(XrgeLol.Combat.TriggerBot.Delay)
    LocalPlayer.Character:FindFirstChildOfClass("Tool"):Activate()
    end
    end
end)
end


local ZPred = tonumber(XrgeLol.Combat.Prediction.Horizontal)

local placemarker = Instance.new("Part", game.Workspace)
    spawn(function()
        placemarker.Anchored = true
        placemarker.CanCollide = false
        placemarker.Size = Vector3.new(0, 0, 0)
        placemarker.Transparency = 1
    end)
function makemarker(Parent, Adornee, Color, Size, Size2)
    local e = Instance.new("BillboardGui", Parent)
    e.Name = "PP"
    e.Adornee = Adornee
    e.Size = UDim2.new(Size, Size2, Size, Size2)
    e.AlwaysOnTop = true
    local a = Instance.new("Frame", e)
    a.Size = UDim2.new(0.5, 0, 0.5, 0)
    a.BackgroundTransparency = 0
    a.BackgroundColor3 = Color
    local z = Instance.new("UIStroke", a)
    z.Thickness = 1.5
    z.Color = Color3.new(255,255,255)
    local g = Instance.new("UICorner", a)
    g.CornerRadius = UDim.new(30, 30)
    return(e)
end

makemarker(placemarker, placemarker, Color3.fromRGB(255,209,220), 0.8, 0)



    --// Functions
    do
        --// Utility Functions
        do
            XrgeTables.Functions.WorldToScreen = function(Position: Vector3)
                if not Position then return end

                local ViewportPointPosition, OnScreen = Camera:WorldToViewportPoint(Position)
                local ScreenPosition = Vector2.new(ViewportPointPosition.X, ViewportPointPosition.Y)
                return {
                    Position = ScreenPosition,
                    OnScreen = OnScreen
                }
            end

            XrgeTables.Functions.Connection = function(ConnectionType: any, Function: any)
                local Connection = ConnectionType:Connect(Function)
                return Connection
            end

            XrgeTables.Functions.MoveMouse = function(Position: Vector2, SmoothingX: number, SmoothingY: number)
                local MousePosition = UserInputService:GetMouseLocation()

                mousemoverel((Position.X - MousePosition.X) / SmoothingX, (Position.Y - MousePosition.Y) / SmoothingY)
            end

            XrgeTables.Functions.CreateDrawing = function(DrawingType: string, Properties: any)
                local DrawingObject = Drawing.new(DrawingType)

                for Property, Value in pairs(Properties) do
                    DrawingObject[Property] = Value
                end
                return DrawingObject
            end

            XrgeTables.Functions.WallCheck = function(Part: any)
                local RayCastParams = RaycastParams.new()
                RayCastParams.FilterType = Enum.RaycastFilterType.Exclude
                RayCastParams.IgnoreWater = true
                RayCastParams.FilterDescendantsInstances = XrgeTables.AuraIgnoreFolder:GetChildren()

                local CameraPosition = Camera.CFrame.Position
                local Direction = (Part.Position - CameraPosition).Unit
                local RayCastResult = workspace:Raycast(CameraPosition, Direction * 10000, RayCastParams)

                return RayCastResult.Instance and RayCastResult.Instance == Part
            end

            XrgeTables.Functions.Create = function(ObjectType: string, Properties: any)
                local Object = Instance.new(ObjectType)

                for Property, Value in pairs(Properties) do
                    Object[Property] = Value
                end
                return Object
            end

            XrgeTables.Functions.GetGun = function(Player: any)
                local Info = {
                    Tool = nil,
                    Ammo = nil,
                    IsGunEquipped = false
                }

                local Tool = Player.Character:FindFirstChildWhichIsA("Tool")

                if not Tool then return end

                if game.GameId == 1958807588 then
                    local ArmoryGun = Player.Information.Armory:FindFirstChild(Tool.Name)
                    if ArmoryGun then
                        Info.Tool = Tool
                        Info.Ammo = ArmoryGun.Ammo.Normal
                        Info.IsGunEquipped = true
                    else
                        for _, Object in pairs(Tool:GetChildren()) do
                            if Object.Name:lower():find("ammo") and not Object.Name:lower():find("max") then
                                Info.Tool = Tool
                                Info.IsGunEquipped = true
                                Info.Ammo = Object
                            end
                        end
                    end
                elseif game.GameId == 3634139746 then
                    for _, Object in pairs(Tool:getdescendants()) do
                        if Object.Name:lower():find("ammo") and not Object.Name:lower():find("max") and not Object.Name:lower():find("no") then
                            Info.Tool = Tool
                            Info.Ammo = Object
                            Info.IsGunEquipped = true
                        end
                    end
                else
                    for _, Object in pairs(Tool:GetChildren()) do
                        if Object.Name:lower():find("ammo") and not Object.Name:lower():find("max") then
                            Info.Tool = Tool
                            Info.IsGunEquipped = true
                            Info.Ammo = Object
                        end
                    end
                end


                return Info
            end

            XrgeTables.Functions.Beam = function(StartPos: Vector3, EndPos: Vector3)
                local ColorSequence = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, 
    Default = "HumanoidRootPart",
    Callback = function(v)
        XrgeLol.Combat.AimPart = v
    end
})

main:Textbox({Name = "Horizontal Pred", Default = "0.22091", Callback = function(v)
    XrgeLol.Combat.Prediction.Horizontal = tonumber(v)
end})

main:Textbox({Name = "Vertical Pred", Default = "0.160829", Callback = function(v)
    XrgeLol.Combat.Prediction.Vertical = tonumber(v)
end})

main:Toggle({Name = "Auto Prediction", Callback = function(v)
    XrgeLol.Combat.PingBased = v
end})

RunService.Stepped:Connect(function()
    if XrgeLol.Combat.PingBased then
        local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
        local split = string.split(pingvalue, '(')
        local ping = tonumber(split[1])

        XrgeLol.Combat.Prediction.Vertical = tonumber(ping / 1500)
        if ping < 200 then
            XrgeLol.Combat.Prediction.Horizontal = 0.2298343243234332
        elseif ping < 170 then
            XrgeLol.Combat.Prediction.Horizontal = 0.2265713
        elseif ping < 160 then
            XrgeLol.Combat.Prediction.Horizontal = 0.17242928282920019171790
        elseif ping < 150 then
            XrgeLol.Combat.Prediction.Horizontal = 0.168041982
        elseif ping < 140 then
            XrgeLol.Combat.Prediction.Horizontal = 0.1608313
        elseif ping < 130 then
            XrgeLol.Combat.Prediction.Horizontal = 0.169202692
        elseif ping < 120 then
            XrgeLol.Combat.Prediction.Horizontal = 0.160283017
        elseif ping < 110 then
            XrgeLol.Combat.Prediction.Horizontal = 0.15165
        elseif ping < 100 then
            XrgeLol.Combat.Prediction.Horizontal = 0.1483987
        elseif ping < 80 then
            XrgeLol.Combat.Prediction.Horizontal = 0.1402632
        elseif ping < 60 then
            XrgeLol.Combat.Prediction.Horizontal = 0.122582
        elseif ping < 40 then
            XrgeLol.Combat.Prediction.Horizontal = 0.100353
        else
            XrgeLol.Combat.Prediction.Horizontal = 0.115859
        end
    end
end)

    trgt:Toggle({Name = "Look At", Callback = function(v)
        XrgeLol.Combat.LookAt = v
    end})

    trgt:Toggle({Name = "View At", Callback = function(v)
        XrgeLol.Combat.Spectate = v
    end})

    cam:List({
        Name = "Easing Style",
        Options = {"Linear","Sine","Bounce","Elastic","Back","Quad","Quart","Quint","Exponential","Circular","Cubic"},
        Default = "Sine",
        Callback = function(v)
            XrgeLol.Combat.EasingStyle = v
        end
    })

    cam:List({
        Name = "Easing Direction",
        Options = {'In', 'Out', 'InOut'},
        Default = "In",
        Callback = function(v)
            XrgeLol.Combat.EasingDirection = v
        end
    })

    cam:Textbox({Name = "Smoothing", Default = "1", Callback = function(v)
        XrgeLol.Combat.Smoothing.Horizontal = v
    end})

    local strafearea = XRGECOMBAT:Section({Name = " Target Strafe", Side = "Right", Size = 245})

    strafearea:Toggle({Name = "Enabled", Callback = function(v)
        XrgeLol.AntiAim.CSync.Enabled = v
    end})

    strafearea:Toggle({Name = "Visualizer", Callback = function(v)
        XrgeLol.AntiAim.CSync.Spoof = v
        XrgeLol.AntiAim.CSync.Visualize.Enabled = v
    end})

    strafearea:Toggle({Name = "Randomize", Callback = function(v)
        XrgeLol.AntiAim.CSync.Type = v and "Random Target" or "Target Strafe"
    end})

    strafearea:Textbox({Name = "Randomize Value", Default = "1", Callback = function(v)
        XrgeLol.AntiAim.CSync.RandomDistance = tonumber(v)
    end})

    strafearea:Textbox({Name = "Speed", Default = "1", Callback = function(v)
        XrgeLol.AntiAim.CSync.TargetStrafe.Speed = tonumber(v)
    end})

    strafearea:Textbox({Name = "Height", Default = "1", Callback = function(v)
        XrgeLol.AntiAim.CSync.TargetStrafe.Height = tonumber(v)
    end})

    strafearea:Textbox({Name = "Distance", Default = "1", Callback = function(v)
        XrgeLol.AntiAim.CSync.TargetStrafe.Distance = tonumber(v)
    end})

    local wrldstff = XRGEVISUALS:Section({Name = "World Settings", Side = "Left", Size = 340})

    wrldstff:Toggle({Name = "Enabled", Callback = function(v)
        
        Default = "Cum",
        Callback = function(v)
            HitEffectsHAHAHHA = v
        end
    })

    onhtstff:Toggle({Name = "Sound", Callback = function(v)
        
        Default = "bubble.wav",
        Callback = function(v)
            XrgeLol.Visuals.OnHit.Sound.Value = v
        end
    })
